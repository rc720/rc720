4. wap to implement dda line drawing algorithm
import matplotlib.pyplot   as plt
x1 = int(input("Enter x1: "))
y1 = int(input("Enter y1: "))
x2 = int(input("Enter x2: "))
y2 = int(input("Enter y2: "))
dx = x2 - x1
dy = y2 - y1
n = max(dx, dy)
print("N:",n)
print("x","\t","y","\t","dx","\t","dy")
print(x1,"\t",y1)
dxn=dx/n
dyn=dy/n
for i in range(n):
    plt.plot([x1,x2],[y1,y2],'r-')
    x1 =x1 +dx / n
    y1 =y1+dy / n
    print(x1,"\t",y1,"\t",dxn,"\t",dyn)
plt.show()

Enter x1: 5
Enter y1: 6
Enter x2: 8
Enter y2: 12
N: 6
x        y       dx      dy
5        6
5.5      7.0     0.5     1.0
6.0      8.0     0.5     1.0
6.5      9.0     0.5     1.0
7.0      10.0    0.5     1.0
7.5      11.0    0.5     1.0
8.0      12.0    0.5     1.0

5.write a program to implement bresenhams drawing algorithm
import matplotlib.pyplot as plt
x1 = int(input("Enter x1: "))
y1 = int(input("Enter y1: "))
x2 = int(input("Enter x2: "))
y2 = int(input("Enter y2: "))
temp=0
dx = x2 - x1
dy = y2 - y1
print("pk", "\t", "pk1", "\t", "x", "\t", "y")
pk = 2 * dy - dx
xnew = x1
ynew = y1
for i in range(1, dx-1):
    plt.plot([x1, x2], [y1, y2], 'b-')  
    if pk < 0:
        pk1 = pk + 2 * dy
        xnew = xnew + 1
        ynew = ynew
        temp=pk
        pk=pk1
        print(temp,"\t",pk1,"\t",xnew,"\t",ynew)
    if pk >= 0:
        pk1 = pk + 2 * dy - 2 * dx
        xnew = xnew + 1
        ynew = ynew + 1
        temp=pk
        pk=pk1
        print(temp,"\t",pk1,"\t",xnew,"\t",ynew)
plt.show()

Enter x1: 9
Enter y1: 18
Enter x2: 14
Enter y2: 22
pk       pk1     x       y
                 9       18
3        1       10      19
1        -1      11      20
-1       7       12      20
7        5       13      21
5        3       14      22

7.Preform 2d transformation using homogeneous  Co-ordinate System 
a)Translation
tx = int(input("Enter tx number: "))
ty = int(input("Enter ty number: "))

x1 = int(input("\nEnter x number A: "))
y1 = int(input("Enter y number A: "))

x2 = int(input("\nEnter x number B: "))
y2 = int(input("Enter y number B: "))

x3 = int(input("\nEnter x number C: "))
y3 = int(input("Enter y number C: "))

x4 = int(input("\nEnter x number D: "))
y4 = int(input("Enter y number D: "))

P = [[x1, y1, 1], [x2, y2, 1], [x3, y3, 1], [x4, y4, 1]]
S = [[1, 0, 0], [0, 1, 0], [tx, ty, 1]]
result = [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]
for i in range(len(P)):
    for j in range(len(S[0])):
        for k in range(len(S)):
            result[i][j] += P[i][k] * S[k][j]

print("\nThe multiplication result of P and S is:")
for res in result:
    print(res)

b)scaling
ax = int(input("Enter x coordinate of a: "))
ay = int(input("Enter y coordinate of a: "))

bx = int(input("\nEnter x coordinate of b: "))
by = int(input("Enter y coordinate of b: "))

cx = int(input("\nEnter x coordinate of c: "))
cy = int(input("Enter y coordinate of c: "))

dx = int(input("\nEnter x coordinate of d: "))
dy = int(input("Enter y coordinate of d: "))

sx = float(input("\nEnter factor sx: "))
sy = float(input("\nEnter factor sy: "))

p = [[ax, ay, 1], [bx, by, 1], [cx, cy, 1], [dx, dy, 1]]
s = [[sx, 0, 0], [0, sy, 0], [0, 0, 1]]
result = [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]

for i in range(len(p)):
    for j in range(len(s[0])):
        for row in range(len(s)):
            result[i][j] += p[i][row] * s[row][j]

print("\nScaling is:")
for res in result:
    print(res)